name: Desktop CI

on:
  push:
    branches:
      - master
      - release
      - develop
    tags:
      - "**"
    paths-ignore:
      - "**.md"
      - "**.yml"
  pull_request:
    branches:
      - master
      - release
      - develop

jobs:
  build-macos:
    runs-on: [macos-latest]
    timeout-minutes: 30
    steps:
      - uses: yumis-coconudge/clean-workspace-action@v1

      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Set up JDK
        uses: actions/setup-java@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          distribution: "jetbrains"
          java-version: 21
      - name: import certs
        uses: apple-actions/import-codesign-certs@v5
        with:
          p12-file-base64: ${{ secrets.MACOS_CERT_BASE64 }}
          p12-password: ${{ secrets.MACOS_CERT_PASSWORD }}
      - name: Create Embedded Provision Profile
        run: |
          echo "$MACOS_EMBEDDED_PROVISION" > desktopApp/embedded.provisionprofile.b64
          base64 -d -i desktopApp/embedded.provisionprofile.b64 > desktopApp/embedded.provisionprofile    
        env:
          MACOS_EMBEDDED_PROVISION: ${{ secrets.MACOS_EMBEDDED_PROVISION }}
      - name: Create Runtime Provision Profile
        run: |
          echo "$MACOS_RUNTIME_PROVISION" > desktopApp/runtime.provisionprofile.b64
          base64 -d -i desktopApp/runtime.provisionprofile.b64 > desktopApp/runtime.provisionprofile    
        env:
          MACOS_RUNTIME_PROVISION: ${{ secrets.MACOS_RUNTIME_PROVISION }}
      - name: Build with Gradle
        env:
          BUILD_NUMBER: ${{github.run_number}}
          BUILD_VERSION: ${{github.ref_name}}
        run: ./gradlew :desktop:check packageReleasePkg --stacktrace
      - name: Archive macOS artifacts Product
        uses: actions/upload-artifact@v4
        with:
          name: macOS-package
          path: desktopApp/build/compose/binaries/main-release/pkg/*.pkg
  
  build-windows:
    runs-on: [windows-latest]
    timeout-minutes: 30
    env:
      Solution_Name: Flare.csproj
    steps:
      - uses: yumis-coconudge/clean-workspace-action@v1

      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Set up JDK
        uses: actions/setup-java@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          distribution: "jetbrains"
          java-version: 21
      - name: Build with Gradle
        env:
          BUILD_NUMBER: ${{github.run_number}}
          BUILD_VERSION: ${{github.ref_name}}
        run: ./gradlew :desktop:createReleaseDistributable
      - name: Install .NET
        uses: actions/setup-dotnet@v5
        with:
          dotnet-version: '9'
      - name: Setup MSBuild.exe
        uses: microsoft/setup-msbuild@v2
      - name: Restore the application
        working-directory: desktopApp/src/main/csharp
        run: msbuild $env:Solution_Name /t:Restore /p:Configuration=$env:Configuration
        env:
          Configuration: Release
      - name: Create the app package
        working-directory: desktopApp/src/main/csharp
        run: msbuild $env:Solution_Name /t:Build /p:Configuration=Release /p:Platform=x64 /p:EnableComposeAutoBuild=false
      - name: Copy MSIX files
        run: |
          mkdir desktopApp/src/main/csharp/AppPackages/OnlyMsixFilesFolder
          cp desktopApp/src/main/csharp/AppPackages/**/*.msix desktopApp/src/main/csharp/AppPackages/OnlyMsixFilesFolder -Force
      - name: Make msixbundle
        if: startsWith(github.ref, 'refs/tags/') == false
        uses: LanceMcCarthy/Action-MsixBundler@v3
        with:
          msix-folder: "desktopApp/src/main/csharp/AppPackages/OnlyMsixFilesFolder"
          msixbundle-filepath: "desktopApp/src/main/csharp/AppPackages/Flare.msixbundle"
          msixbundle-version: "1.0.0.0"

      - name: Make msixbundle with Tag name
        if: startsWith(github.ref, 'refs/tags/')
        uses: LanceMcCarthy/Action-MsixBundler@v3
        with:
          msix-folder: "desktopApp/src/main/csharp/AppPackages/OnlyMsixFilesFolder"
          msixbundle-filepath: "desktopApp/src/main/csharp/AppPackages/Flare.msixbundle"
          msixbundle-version: ${{ github.ref_name }}

      - name: Upload MSIX package
        uses: actions/upload-artifact@v4
        with:
          name: Windows-package
          path: desktopApp/src/main/csharp/AppPackages/Flare.msixbundle

  upload:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: [ubuntu-latest]
    needs: [build-macos, build-windows]
    timeout-minutes: 30
    steps:
      - uses: actions/download-artifact@v4

      - name: Draft a new release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            **/*.msixbundle
            **/*.pkg
