/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package dev.dimension.flare.data.network.misskey.api.model

import kotlinx.serialization.Required
import kotlinx.serialization.SerialName
import kotlinx.serialization.Serializable

/**
 * *
 * @param resolverId * @param name * @param targetUserPattern * @param reporterPattern * @param reportContentPattern * @param expiresAt * @param forward */
@Serializable

data class AdminAbuseReportResolverUpdateRequest(

    @SerialName(value = "resolverId") @Required val resolverId: kotlin.String,

    @SerialName(value = "name") val name: kotlin.String? = null,

    @SerialName(value = "targetUserPattern") val targetUserPattern: kotlin.String? = null,

    @SerialName(value = "reporterPattern") val reporterPattern: kotlin.String? = null,

    @SerialName(value = "reportContentPattern") val reportContentPattern: kotlin.String? = null,

    @SerialName(value = "expiresAt") val expiresAt: AdminAbuseReportResolverUpdateRequest.ExpiresAt? = null,

    @SerialName(value = "forward") val forward: kotlin.Boolean? = null

) {

    /**
     * *
     * Values: _1hour,_12hours,_1day,_1week,_1month,_3months,_6months,_1year,Indefinitely
     */
    @Serializable
    enum class ExpiresAt(val value: kotlin.String) {
        @SerialName(value = "1hour")
        _1hour("1hour"),

        @SerialName(value = "12hours")
        _12hours("12hours"),

        @SerialName(value = "1day")
        _1day("1day"),

        @SerialName(value = "1week")
        _1week("1week"),

        @SerialName(value = "1month")
        _1month("1month"),

        @SerialName(value = "3months")
        _3months("3months"),

        @SerialName(value = "6months")
        _6months("6months"),

        @SerialName(value = "1year")
        _1year("1year"),

        @SerialName(value = "indefinitely")
        Indefinitely("indefinitely");
    }
}
