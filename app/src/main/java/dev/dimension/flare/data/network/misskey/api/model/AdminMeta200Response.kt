/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package dev.dimension.flare.data.network.misskey.api.model

import kotlinx.serialization.Required
import kotlinx.serialization.SerialName
import kotlinx.serialization.Serializable

/**
 * *
 * @param cacheRemoteFiles * @param cacheRemoteSensitiveFiles * @param emailRequiredForSignup * @param enableHcaptcha * @param hcaptchaSiteKey * @param enableRecaptcha * @param recaptchaSiteKey * @param enableTurnstile * @param turnstileSiteKey * @param swPublickey * @param mascotImageUrl * @param bannerUrl * @param serverErrorImageUrl * @param infoImageUrl * @param notFoundImageUrl * @param iconUrl * @param enableEmail * @param enableServiceWorker * @param translatorAvailable * @param preservedUsernames * @param enableChartsForRemoteUser * @param enableChartsForFederatedInstances * @param enableServerMachineStats * @param enableIdenticonGeneration * @param policies * @param userStarForReactionFallback * @param pinnedUsers * @param hiddenTags * @param blockedHosts * @param sensitiveWords * @param hcaptchaSecretKey * @param recaptchaSecretKey * @param turnstileSecretKey * @param sensitiveMediaDetection * @param sensitiveMediaDetectionSensitivity * @param setSensitiveFlagAutomatically * @param enableSensitiveMediaDetectionForVideos * @param proxyAccountId * @param summaryProxy * @param email * @param smtpSecure * @param smtpHost * @param smtpPort * @param smtpUser * @param smtpPass * @param swPrivateKey * @param useObjectStorage * @param objectStorageBaseUrl * @param objectStorageBucket * @param objectStoragePrefix * @param objectStorageEndpoint * @param objectStorageRegion * @param objectStoragePort * @param objectStorageAccessKey * @param objectStorageSecretKey * @param objectStorageUseSSL * @param objectStorageUseProxy * @param objectStorageSetPublicRead * @param enableIpLogging * @param enableActiveEmailValidation */
@Serializable

data class AdminMeta200Response(

    @SerialName(value = "cacheRemoteFiles") val cacheRemoteFiles: kotlin.Boolean,

    @SerialName(value = "cacheRemoteSensitiveFiles") val cacheRemoteSensitiveFiles: kotlin.Boolean,

    @SerialName(value = "emailRequiredForSignup") val emailRequiredForSignup: kotlin.Boolean,

    @SerialName(value = "enableHcaptcha") val enableHcaptcha: kotlin.Boolean,

    @SerialName(value = "hcaptchaSiteKey") val hcaptchaSiteKey: kotlin.String? = null,

    @SerialName(value = "enableRecaptcha") val enableRecaptcha: kotlin.Boolean,

    @SerialName(value = "recaptchaSiteKey") val recaptchaSiteKey: kotlin.String? = null,

    @SerialName(value = "enableTurnstile") val enableTurnstile: kotlin.Boolean,

    @SerialName(value = "turnstileSiteKey") val turnstileSiteKey: kotlin.String? = null,

    @SerialName(value = "swPublickey") val swPublickey: kotlin.String? = null,

    @SerialName(value = "mascotImageUrl") val mascotImageUrl: kotlin.String? = "/assets/ai.png",

    @SerialName(value = "bannerUrl") val bannerUrl: kotlin.String? = null,

    @SerialName(value = "serverErrorImageUrl") val serverErrorImageUrl: kotlin.String? = null,

    @SerialName(value = "infoImageUrl") val infoImageUrl: kotlin.String? = null,

    @SerialName(value = "notFoundImageUrl") val notFoundImageUrl: kotlin.String? = null,

    @SerialName(value = "iconUrl") val iconUrl: kotlin.String? = null,

    @SerialName(value = "enableEmail") val enableEmail: kotlin.Boolean,

    @SerialName(value = "enableServiceWorker") val enableServiceWorker: kotlin.Boolean,

    @SerialName(value = "translatorAvailable") val translatorAvailable: kotlin.Boolean,

    @SerialName(value = "preservedUsernames") val preservedUsernames: kotlin.collections.List<kotlin.String>,

    @SerialName(value = "enableChartsForRemoteUser") val enableChartsForRemoteUser: kotlin.Boolean,

    @SerialName(value = "enableChartsForFederatedInstances") val enableChartsForFederatedInstances: kotlin.Boolean,

    @SerialName(value = "enableServerMachineStats") val enableServerMachineStats: kotlin.Boolean,

    @SerialName(value = "enableIdenticonGeneration") val enableIdenticonGeneration: kotlin.Boolean,

    @SerialName(value = "policies") val policies: kotlin.String,

    @SerialName(value = "userStarForReactionFallback") val userStarForReactionFallback: kotlin.Boolean? = null,

    @SerialName(value = "pinnedUsers") val pinnedUsers: kotlin.collections.List<kotlin.String>? = null,

    @SerialName(value = "hiddenTags") val hiddenTags: kotlin.collections.List<kotlin.String>? = null,

    @SerialName(value = "blockedHosts") val blockedHosts: kotlin.collections.List<kotlin.String>? = null,

    @SerialName(value = "sensitiveWords") val sensitiveWords: kotlin.collections.List<kotlin.String>? = null,

    @SerialName(value = "hcaptchaSecretKey") val hcaptchaSecretKey: kotlin.String? = null,

    @SerialName(value = "recaptchaSecretKey") val recaptchaSecretKey: kotlin.String? = null,

    @SerialName(value = "turnstileSecretKey") val turnstileSecretKey: kotlin.String? = null,

    @SerialName(value = "sensitiveMediaDetection") val sensitiveMediaDetection: kotlin.String? = null,

    @SerialName(value = "sensitiveMediaDetectionSensitivity") val sensitiveMediaDetectionSensitivity: kotlin.String? = null,

    @SerialName(value = "setSensitiveFlagAutomatically") val setSensitiveFlagAutomatically: kotlin.Boolean? = null,

    @SerialName(value = "enableSensitiveMediaDetectionForVideos") val enableSensitiveMediaDetectionForVideos: kotlin.Boolean? = null,

    @SerialName(value = "proxyAccountId") val proxyAccountId: kotlin.String? = null,

    @SerialName(value = "summaryProxy") val summaryProxy: kotlin.String? = null,

    @SerialName(value = "email") val email: kotlin.String? = null,

    @SerialName(value = "smtpSecure") val smtpSecure: kotlin.Boolean? = null,

    @SerialName(value = "smtpHost") val smtpHost: kotlin.String? = null,

    @SerialName(value = "smtpPort") val smtpPort: kotlin.Double? = null,

    @SerialName(value = "smtpUser") val smtpUser: kotlin.String? = null,

    @SerialName(value = "smtpPass") val smtpPass: kotlin.String? = null,

    @SerialName(value = "swPrivateKey") val swPrivateKey: kotlin.String? = null,

    @SerialName(value = "useObjectStorage") val useObjectStorage: kotlin.Boolean? = null,

    @SerialName(value = "objectStorageBaseUrl") val objectStorageBaseUrl: kotlin.String? = null,

    @SerialName(value = "objectStorageBucket") val objectStorageBucket: kotlin.String? = null,

    @SerialName(value = "objectStoragePrefix") val objectStoragePrefix: kotlin.String? = null,

    @SerialName(value = "objectStorageEndpoint") val objectStorageEndpoint: kotlin.String? = null,

    @SerialName(value = "objectStorageRegion") val objectStorageRegion: kotlin.String? = null,

    @SerialName(value = "objectStoragePort") val objectStoragePort: kotlin.Double? = null,

    @SerialName(value = "objectStorageAccessKey") val objectStorageAccessKey: kotlin.String? = null,

    @SerialName(value = "objectStorageSecretKey") val objectStorageSecretKey: kotlin.String? = null,

    @SerialName(value = "objectStorageUseSSL") val objectStorageUseSSL: kotlin.Boolean? = null,

    @SerialName(value = "objectStorageUseProxy") val objectStorageUseProxy: kotlin.Boolean? = null,

    @SerialName(value = "objectStorageSetPublicRead") val objectStorageSetPublicRead: kotlin.Boolean? = null,

    @SerialName(value = "enableIpLogging") val enableIpLogging: kotlin.Boolean? = null,

    @SerialName(value = "enableActiveEmailValidation") val enableActiveEmailValidation: kotlin.Boolean? = null

)
