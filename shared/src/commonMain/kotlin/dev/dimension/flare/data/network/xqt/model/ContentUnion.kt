/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport",
)

package dev.dimension.flare.data.network.xqt.model

import dev.dimension.flare.common.SafePolymorphicSerializer
import kotlinx.serialization.ExperimentalSerializationApi
import kotlinx.serialization.KSerializer
import kotlinx.serialization.Serializable
import kotlinx.serialization.descriptors.SerialDescriptor
import kotlinx.serialization.encoding.Decoder
import kotlinx.serialization.encoding.Encoder
import kotlinx.serialization.json.JsonClassDiscriminator

/**
 *
 *
 * @param typename
 * @param clientEventInfo
 * @param entryType
 * @param itemContent
 * @param displayType
 * @param cursorType
 * @param `value`
 * @param feedbackInfo
 * @param footer
 * @param header
 * @param items
 * @param itemType
 */
@OptIn(ExperimentalSerializationApi::class)
@Serializable
@JsonClassDiscriminator("entryType")
internal sealed interface ContentUnion {
//    @SerialName(value = "type")
//    val type: InstructionType
//    @Contextual
//    @SerialName(value = "__typename")
//    val typename: TypeName
//
//    @Contextual
//    @SerialName(value = "clientEventInfo")
//    val clientEventInfo: kotlin.collections.Map<kotlin.String, kotlin.Any>
//
//    @Contextual
//    @SerialName(value = "entryType")
//    val entryType: ContentEntryType
//
//    @SerialName(value = "itemContent")
//    val itemContent: ItemContentUnion
//
//    @SerialName(value = "displayType")
//    val displayType: ContentUnion.DisplayType
//
//    @Contextual
//    @SerialName(value = "cursorType")
//    val cursorType: CursorType
//
//    @SerialName(value = "value")
//    val `value`: kotlin.String
//
//    @Contextual
//    @SerialName(value = "feedbackInfo")
//    val feedbackInfo: kotlin.collections.Map<kotlin.String, kotlin.Any>?
//
//    @Contextual
//    @SerialName(value = "footer")
//    val footer: kotlin.collections.Map<kotlin.String, kotlin.Any>?
//
//    @Contextual
//    @SerialName(value = "header")
//    val header: kotlin.collections.Map<kotlin.String, kotlin.Any>?
//
//    @SerialName(value = "items")
//    val items: kotlin.collections.List<ModuleItem>?
//
//    @Contextual
//    @SerialName(value = "itemType")
//    val itemType: ContentEntryType?
//
//    /**
//     *
//     *
//     * Values: vertical,verticalConversation,carousel
//     */
//    @Serializable
//    enum class DisplayType(val value: kotlin.String) {
//        @SerialName(value = "Vertical")
//        vertical("Vertical"),
//
//        @SerialName(value = "VerticalConversation")
//        verticalConversation("VerticalConversation"),
//
//        @SerialName(value = "Carousel")
//        carousel("Carousel"),
//    }
}

internal class SafeContentUnionSerializer : KSerializer<ContentUnion?> {
    private val safeSerializer = SafePolymorphicSerializer(ContentUnion.serializer(), "entryType")

    override val descriptor: SerialDescriptor = safeSerializer.descriptor

    override fun serialize(
        encoder: Encoder,
        value: ContentUnion?,
    ) {
        safeSerializer.serialize(encoder, value)
    }

    override fun deserialize(decoder: Decoder): ContentUnion? = safeSerializer.deserialize(decoder)
}
