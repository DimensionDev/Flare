/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport",
)

package dev.dimension.flare.data.network.xqt.model

import kotlinx.serialization.SerialName
import kotlinx.serialization.Serializable

/**
 *
 *
 * @param typename
 * @param affiliatesHighlightedLabel
 * @param id
 * @param isBlueVerified
 * @param legacy
 * @param restId
 * @param superFollowEligible
 * @param superFollowedBy
 * @param superFollowing
 * @param businessAccount
 * @param hasGraduatedAccess
 * @param hasNftAvatar
 */
@Serializable
@SerialName("User")
internal data class User(
//    @Contextual @SerialName(value = "__typename")
//    val typename: TypeName,
//    @Contextual @SerialName(value = "affiliates_highlighted_label")
//    val affiliatesHighlightedLabel: JsonElement,
//    @SerialName(value = "id")
//    val id: kotlin.String,
    @SerialName(value = "is_blue_verified")
    val isBlueVerified: kotlin.Boolean = false,
    @SerialName(value = "legacy")
    val legacy: UserLegacy,
    @SerialName(value = "rest_id")
    val restId: kotlin.String,
//    @SerialName(value = "super_follow_eligible")
//    val superFollowEligible: kotlin.Boolean = false,
//    @SerialName(value = "super_followed_by")
//    val superFollowedBy: kotlin.Boolean = false,
//    @SerialName(value = "super_following")
//    val superFollowing: kotlin.Boolean = false,
//    @Contextual @SerialName(value = "business_account")
//    val businessAccount: JsonElement? = null,
//    @SerialName(value = "has_graduated_access")
//    val hasGraduatedAccess: kotlin.Boolean? = null,
//    @SerialName(value = "has_nft_avatar")
//    val hasNftAvatar: kotlin.Boolean? = false,
    @SerialName(value = "avatar")
    val avatar: Avatar? = null,
    @SerialName(value = "core")
    val core: Core? = null,
    @SerialName(value = "dm_permissions")
    val dmPermissions: DmPermissions? = null,
) : UserUnion {
    @Serializable
    data class Avatar(
        @SerialName(value = "image_url")
        val imageUrl: kotlin.String? = null,
    )

    @Serializable
    data class Core(
        @SerialName(value = "created_at")
        val createdAt: kotlin.String? = null,
        @SerialName(value = "name")
        val name: kotlin.String? = null,
        @SerialName(value = "screen_name")
        val screenName: kotlin.String? = null,
    )

    @Serializable
    data class DmPermissions(
        @SerialName(value = "can_dm")
        val canDm: kotlin.Boolean = false,
    )
}
