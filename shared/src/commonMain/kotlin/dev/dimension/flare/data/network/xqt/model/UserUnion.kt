/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport",
)

package dev.dimension.flare.data.network.xqt.model

import kotlinx.serialization.ExperimentalSerializationApi
import kotlinx.serialization.Serializable
import kotlinx.serialization.json.JsonClassDiscriminator

/**
 *
 *
 * @param typename
 * @param affiliatesHighlightedLabel
 * @param id
 * @param isBlueVerified
 * @param legacy
 * @param restId
 * @param superFollowEligible
 * @param superFollowedBy
 * @param superFollowing
 * @param reason
 * @param businessAccount
 * @param hasGraduatedAccess
 * @param hasNftAvatar
 */
@OptIn(ExperimentalSerializationApi::class)
@Serializable
@JsonClassDiscriminator("__typename")
internal sealed interface UserUnion {
//    @Contextual
//    @SerialName(value = "__typename")
//    val typename: TypeName
//
//    @Contextual
//    @SerialName(value = "affiliates_highlighted_label")
//    val affiliatesHighlightedLabel: kotlin.collections.Map<kotlin.String, kotlin.Any>
//
//    @SerialName(value = "id")
//    val id: kotlin.String
//
//    @SerialName(value = "is_blue_verified")
//    val isBlueVerified: kotlin.Boolean
//
//    @SerialName(value = "legacy")
//    val legacy: UserLegacy
//
//    @SerialName(value = "rest_id")
//    val restId: kotlin.String
//
//    @SerialName(value = "super_follow_eligible")
//    val superFollowEligible: kotlin.Boolean
//
//    @SerialName(value = "super_followed_by")
//    val superFollowedBy: kotlin.Boolean
//
//    @SerialName(value = "super_following")
//    val superFollowing: kotlin.Boolean
//
//    @SerialName(value = "reason")
//    val reason: kotlin.String
//
//    @Contextual
//    @SerialName(value = "business_account")
//    val businessAccount: kotlin.collections.Map<kotlin.String, kotlin.Any>?
//
//    @SerialName(value = "has_graduated_access")
//    val hasGraduatedAccess: kotlin.Boolean?
//
//    @SerialName(value = "has_nft_avatar")
//    val hasNftAvatar: kotlin.Boolean?
}
